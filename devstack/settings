#/bin/bash

# MidoNet repo
MIDONET_REPO=${MIDONET_REPO:-http://github.com/midonet/midonet.git}
MIDONET_BRANCH=${MIDONET_BRANCH:-master}
MIDONET_DIR=${MIDONET_DIR:-$DEST/midonet}

# MidoNet service endpoint configuration
MIDONET_API_PORT=${MIDONET_API_PORT:-8081}
MIDONET_SERVICE_PROTOCOL=${MIDONET_SERVICE_PROTOCOL:-$SERVICE_PROTOCOL}
MIDONET_SERVICE_HOST=${MIDONET_SERVICE_HOST:-$SERVICE_HOST}
MIDONET_API_URL="${MIDONET_SERVICE_PROTOCOL}://${MIDONET_SERVICE_HOST}:${MIDONET_API_PORT}/midonet-api"

# Run neutron with noauth only in devstack if True
MIDONET_ENABLE_Q_SVC_ONLY=${MIDONET_ENABLE_Q_SVC_ONLY:-False}

#
# Set all the devstack ENV VARS needed to run midonet
#

# Disable nova-network and enable neutron services
disable_service n-net
disable_service q-fwaas
disable_service q-l3
disable_service q-agt
disable_service q-vpn
enable_service q-svc

# LBaaS is implemented as a service driver only for the new version of the
# midonet plugin that is based on the cluster.
if [ "$USE_CLUSTER" == "True" ]; then
    enable_service q-lbaas
else
    disable_service q-lbaas
fi

NEUTRON_LBAAS_SERVICE_PROVIDERV1="LOADBALANCER:Midonet:midonet.neutron.services.loadbalancer.driver.MidonetLoadbalancerDriver:default"

if [ "$MIDONET_ENABLE_Q_SVC_ONLY" == "True" ]; then
    Q_AUTH_STRATEGY=noauth
    NEUTRON_CREATE_INITIAL_NETWORKS=False
    ENABLED_SERVICES=q-svc,mysql,rabbit
else
    enable_service q-dhcp
    enable_service q-meta
fi
# Use midonet as Neutron plugin
Q_PLUGIN=midonet
IP_VERSION=4

# Set all the passwords
THE_PASSWORD=midonet
DATABASE_PASSWORD=${DATABASE_PASSWORD:-$THE_PASSWORD}
RABBIT_PASSWORD=${RABBIT_PASSWORD:-$THE_PASSWORD}
SERVICE_TOKEN=${SERVICE_TOKEN:-$THE_PASSWORD}
SERVICE_PASSWORD=${SERVICE_PASSWORD:-$THE_PASSWORD}
ADMIN_PASSWORD=${ADMIN_PASSWORD:-$THE_PASSWORD}

# Tempest options
IPV6_ENABLED=False
NETWORK_API_EXTENSIONS=external-net,router,security-group,agent,dhcp_agent_scheduler,binding,quotas

# Don't let mido.sh configure the logging
CONFIGURE_LOGGING=False
